# Issue Lists

## Get All Lists

> The above command returns JSON structured like this:

<%= partial "includes/json/issue-lists.md.erb" %>

This endpoint retrieves all issue lists.

### HTTP Request

`GET /issue-lists`

### Available Parameters

Parameter | Description
--------- | -----------
all | Show all lists. By default, only lists for rating are show

## Get List

> The above command returns JSON structured like this:

<%= partial "includes/json/issue-list.md.erb" %>

This endpoint retrieves a specific issue list.

### HTTP Request

`GET /issue-lists/<ID>`

## List Updating

> The above command returns JSON structured like this:

<%= partial "includes/json/issue-list.md.erb" %>

This endpoint updates an exist issue list.

### HTTP Request

`PUT /issue-lists/<ID>` 

### Available Parameters

Parameter | Description
--------- | -----------
is_rating_list | Use this list for ratings

## List Issues

> The above command returns JSON structured like this:

<%= partial "includes/json/issues.md.erb" %>

This endpoint retrieves a list of issues in a specific issue list.

### HTTP Request

`GET /issue-lists/<ID>/issues`

## Create Vote

This endpoint creates a new vote into the list

### HTTP Request

`POST /issue-lists/<ID>/vote` 

### Available Parameters

Parameter | Description
--------- | -----------
issue_id | An issue ID
rating_id | An issue rating ID
vote | Value of vote

## Users Votes

> The above command returns JSON structured like this:

<%= partial "includes/json/users-votes.md.erb" %>

This endpoint returns a list of votes divided by users 

### HTTP Request

`GET /issue-lists/<ID>/users-votes` 

### Available Parameters

Parameter | Description
--------- | -----------
user_id | A user ID (optional)
role_id | A role ID (optional)

## Summary Votes

> The above command returns JSON structured like this:

<%= partial "includes/json/summary-votes.md.erb" %>

This endpoint returns a list of votes divided by users.
If `rating_id` in `votes` collection is null â€“ it means that this is a summary vote 

### HTTP Request

`GET /issue-lists/<ID>/summary-votes` 

## Unvoted issues count

> The above command returns JSON structured like this:

```json
{
    "data": 5375
}
```

This endpoint returns a number of unvoted issues in the list, for a current user only 

### HTTP Request

`GET /issue-lists/<ID>/unvoted` 

